# Lecture 6 (Non-parametric tests: Wilcoxon rank-sum and Wilcoxon signed-rank tests) {#wilcoxon-rank-sum-signed-rank}

```{r, include=FALSE}
library(tidyverse) 
library(knitr)
library(kableExtra)
```
## Lecture

This lecture comprises three parts:

**Part 1: An introduction to non-parametric tests** 

Part 1 covers an introduction to non-parametric tests and why they might be useful to consider.

Lecture recording:

Slides: 

**Part 2: The Wilcoxon rank-sum test** 

Part 2 introduces you to the Wilcoxon rank-sum test. This includes when to use this test, the theory behind it ,  how the test statistic would be calculated manually, how to run the test in R, and how to interpret the output:

Lecture recording:

Slides: 

**Part 3: The Wilcoxon signed-rank test** 

Part 3 introduces you to the Wilcoxon signed-rank test, covering when to use the test, the theory behind it, how to calculate the test statistic manually, how to run the test in R and how to interpret the output:

Lecture recording:

Slides: 

## Lab preparation

Before the lab, please watch the following video. This walks you through how to perform a Wilcoxon rank-sum test and Wilcoxon signed-rank test in R.

The R markdown script covered in this video can be found here:

## Lab

In the lab, we'll practice running a Wilcoxon rank-sum and Wilcoxon signed-rank test in R. Please download the following zip file which contains two datasets: "apple_study_data.csv" and "banana_study_data.csv. 

The datasets relate to the following research questions:

**1. Apple dataset**

You are a researcher interested in whether the old saying "an apple a day keeps the doctor away is true". You recruit 16 people and assign each participant to either a "0 apples" or "1 apple" condition. Participants in the "0 apple" condition eat 0 apples every day for a year. Participants in the "1 apple" condition eat 1 apple a day for a year.  You ask participants to report how many times they visited the GP in the year.

**2. Banana dataset**

You are interested in whether eating bananas keeps the doctor away. 

This time you recruit only one group of participants. In the first year, you ask them to eat 0 banana every day. In the second year, you ask them to eat 1 bananas a day. You ask them to report how many times they visit the GP in Year 1 and Year 2. 

Consider each research question, perform the normality checks, and then the appropriate analyses.

## Lab - model script

Here is a model script that produces the answers to the above research questions. I use the word 'model' loosely, as you may have used different functions you've learned over the last two years (and that's absolutely fine!). So don't worry if you haven't used the exact same functions as me. You should end up with the same results and interpretation at the end though.

### Load in the libraries we need

```{r }
library(tidyverse) 
library(cowplot)
```

### Research question 1:

Background: You are a researcher interested in whether the old saying "an apple a day keeps the doctor away is true". You recruit 16 people and assign each participant to either a "0 apples" or "1 apple" condition. Participants in the "0 apple"" condition eat 0 apples every day for a year. Participants in the "1 apple" condition eat 1 apple a day for a year. You ask participants to report how many times they visited the GP in the year.

### Read in the data

```{r}
apple_data <- read.csv("apple_study_data.csv")
```

### Check whether the data meets the assumption of normality


#### 0 apples group:


##### Filter data:

This produces a new dataset containing data for the 0 apple a day group only:

```{r}
zero_apples <- apple_data %>% filter(Apples_per_day == "0 apples")  
```


##### Produce a Q-Q plot:

```{r}
qqnorm(zero_apples$Visits) # plots observed data
qqline(zero_apples$Visits, col = "steelblue") # plots expected data if data follows a normal distribution
```

Some evidence of deviation. 

##### Shapiro-Wilk test:

```{r}
shapiro.test(zero_apples$Visits)

```

This suggests that the data in the zero apples group violates the assumption of normality.

#### 1 apple group:

##### Filter data:

This produces a new dataset containing data for the 1 apple a day group only:

```{r}
one_apple <- apple_data %>% filter(Apples_per_day == "1 apple")

```

##### Produce a Q-Q plot:


```{r}
qqnorm(one_apple$Visits) # qqnorm plots our data

qqline(one_apple$Visits, col = "steelblue") # plots expected data if the data are from a normally distributed population.
```

The data in this group seems to follow the diagonal line quite well. 

##### Shapiro-Wilk test:

```{r}
shapiro.test(one_apple$Visits)
```

The Shapiro-Wilk test suggests the assumption of normality is not violated for this group

### Exploring our dataset:

Medians, range, and number of participants per group:

```{r}
apple_data %>% # 
  group_by(Apples_per_day) %>% # plots data per group
  summarise(med = median(Visits), # median Visits value 
            min = min(Visits), # lowest Visits value
            max = max(Visits), # highest Visits value
            n = n()) # number of participants per group
```

Plot:

```{r}
ggplot(apple_data, aes(x=Apples_per_day, y=Visits)) + 
  geom_boxplot() + 
  labs(y = "Number of visits to the GP") + 
  theme_cowplot() 
```

The median for the 1 apple group is lower than the median for the 0 apple group. There are 8 participants in each group.

### Performing the Wilcoxon rank-sum test:

```{r}
model1 <- wilcox.test(Visits ~ Apples_per_day, data = apple_data, paired = FALSE) 
model1
```

There is a significant difference between the groups (*p* = .018).

### Effect size: 

```{r}
z <- qnorm(model1$p.value/2)
r <- z/sqrt(16) # earlier, we saw we have 8 participants in each Apples_per_day, so 16
r

```

The effect size (*r*) is equal to -0.59. This is a large effect size.  


### Interpretation:

A Wilcoxon rank-sum test revealed that the participants who ate one apple a day (Median = 3.5; Range = 0-8) visited the GP less than participants who ate zero apples a day (Median = 9.5; Range = 2-41), *W* = 55, *p* = .018, *r* = -.59. 

This study provides evidence that an apple a day  keep the doctor away.

### Research question 2:

You are interested in whether eating bananas keeps the doctor away. This time you recruit only one group of participants. In the first year, you ask them to eat 0 banana every day. In the second year, you ask them to eat 1 bananas a day. You ask them to report how many times they visit the GP in Year 1 and Year 2. 

### Read in the data

This chunk reads in the data.

```{r}
banana_data <- read.csv("banana_study_data.csv") 
```

### Check whether the data meets the assumption of normality

```{r}
banana_data$difference <- banana_data$zero_banana - banana_data$one_banana 
```

#### Produce the Q-Q plot:

```{r}
qqnorm(banana_data$difference) # qqnorm plots our data

qqline(banana_data$difference, col = "steelblue") # plots expected data if the data are from a normally distributed population.
```

### Shapiro-Wilk test:

A few of the points deviate from the line. This suggests the assumption of normality may be violated.

```{r}
shapiro.test(banana_data$difference)

```

The p-value is significant, this suggests the assumption of normality has been violated. 

### Exploring the data:

#### Descriptive statistics:

```{r}
banana_data %>%
  summarise(med_0banana = median(zero_banana), min_0banana = min(zero_banana), max_0banana = max(zero_banana), # median, min and max for 0 banana timepoint,
            med_1banana = median(one_banana), min_1banana = min(one_banana), max_1banana = max(one_banana), # median, min and max for 1 banana timepoint
            n()) # number of participants
```
            
#### Plot:

Firstly, we need our data to be in long format:

```{r}
banana_data_long <- gather(banana_data, Bananas, Visits, zero_banana:one_banana)
banana_data_long 

banana_data_long$Bananas <- factor(banana_data_long$Bananas, c("zero_banana", "one_banana")) # this will mean zero bananas is presented first on the plot
```

Then produce the plot:
```{r}
ggplot(banana_data_long, aes(x=Bananas, y=Visits)) + 
  geom_boxplot() +
  labs(y = "Number of GP visits") +
  scale_x_discrete(labels = c("Zero", "One")) + # changes "zero_banana" to "Zero" and "one_banana" to "One" - you could also recode the variable to do the same thing
  theme_cowplot()
```

The median number of visits to the GP is lower in the zero banana condition than the one banana condition.

### Performing the Wilcoxon signed-rank test:

```{r}
model2 <- wilcox.test(banana_data$zero_banana, banana_data$one_banana, paired = TRUE)
model2
```

The p-value is equal to 0.03552 (or .036), indicating there is a significant difference between the conditions.

### Effect size: 

```{r} 
z_bananas <- qnorm(model2$p.value/2)
r_banana <- z_bananas/sqrt(12) # 12 because we have 12 observations overall (6 participants and 2 timepoints for each)
r_banana
```

The effect size (*r*) is equal to -0.61, indicating there is a large effect size.

### Interpretation:

A Wilcoxon signed-rank test revealed that the number of visits to the GP was significantly lower in the 0 banana condition (Median = 5; Range = 1-22) than the 1 apple a day condition (Median = 28; Range = 3-65), *V* = 0, *p* = .036, *r* = -.61. 

Given that participants who ate one banana a day visited the doctor more than participants who ate zero apples a day, this study provides evidence that eating a banana a day does not keep the doctor away 

(Disclaimer: data are 100% made up, please don't stop eating bananas based on this...!)

## Worksheet:

The answers are in the next section.

### Activity 1: Calculating test statistics manually

#### Wilcoxon rank-sum test

You are a researcher interested in whether the number of cups of coffee drank affects how many admin tasks participants can get done in an hour. You assign to one of two conditions (drink 4 cups of coffee a day or drink 0 cups of coffee a day). After a week, you ask participants to come into the lab and ask them to complete a range of admin tasks. You count how many admin tasks they manage to complete. The data are below. 

Use this data to calculate the test statistic manually:

```{r echo = FALSE} 
Group <- c("4 cups", "4 cups", "4 cups", "0 cups", "0 cups", "0 cups", "0 cups")
Tasks_completed <- c(5, 18, 14, 6, 4, 17, 14)
tab1 <- data.frame(Group, Tasks_completed)
knitr::kable(tab1, booktabs = TRUE, align=rep('c', 2)) %>%
  kable_styling(position = "center")
```

Steps:

1.	First rank the data

2. Sum the ranks for each group

3.	Calculate the mean rank for each group

4.	Calculate the sum of ranks minus mean rank for each group

5.	What is the test statistic?

6.	What might R report as the test statistic and why?

#### Wilcoxon signed-rank test

You are a researcher interested in whether a reading intervention helps children. You assess children’s reading skills and then give them all an intensive reading intervention. You then measure their reading abilities again. 

Use this data to calculate the test statistic manually

```{r echo = FALSE} 
Before_intervention <- c(23, 34, 67, 65, 21)
After_intervention <- c(27, 34, 91, 67, 44)
tab2 <- data.frame(Before_intervention, After_intervention)
knitr::kable(tab2, booktabs = TRUE, align=rep('c', 2)) %>%
  kable_styling(position = "center")
```

1.	Calculate the difference between “Before intervention” and “After intervention”

2.	Note whether the difference is positive or negative

3.	Rank the difference

4. 4.	Next, add up positive ranks and negative ranks

5.	What is the test statistic (T)?

6.	R reports a test statistic “*V*” instead of R.  What might *V* equal to? Why might *V* equal to two values?

### Activity 2: Interpreting R output

Interpret the following R output. Part 1 uses an independent groups design. Part 2 uses a repeated measures design. Please note, this data are different to that used in Activity 1 (so the test statistics will be different).

#### An independent groups design

##### Testing the assumption of normality 

###### Group 1:
```{r echo = FALSE} 
worksheet_activity1 <- read.csv("l6_worksheet1.csv")
group1 <- worksheet_activity1 %>% filter(Group == 1)

qqnorm(group1$Outcome) 
qqline(group1$Outcome, col = "steelblue") 

shapiro.test(group1$Outcome)
```

###### Group 2:
```{r echo = FALSE} 
group2 <- worksheet_activity1 %>% filter(Group == 2)

qqnorm(group2$Outcome) 
qqline(group2$Outcome, col = "steelblue") 

shapiro.test(group2$Outcome)
```

Is the assumption violated?

##### Interpret the descriptive statistics and the model output

```{r echo = FALSE} 
model1 <- wilcox.test(Outcome ~ Group, data = worksheet_activity1, paired = FALSE)
model1

worksheet_activity1 %>%
  group_by(Group) %>%
  summarise(med = median(Outcome),
            min = min(Outcome),
            max = max(Outcome),
            n())
```

What can we conclude? Report in APA format.

How was the p-value calculated? 

#### A repeated measures design

You are a researcher interested in whether the amount of chocolate eaten is different before and after the participant goes a diet. 

##### Testing the assumption of normality 

```{r echo = FALSE} 
worksheet_activity2 <- read.csv("l6_worksheet2.csv")

worksheet_activity2$Difference <- worksheet_activity2$Before - worksheet_activity2$After

qqnorm(worksheet_activity2$Difference) 
qqline(worksheet_activity2$Difference, col = "steelblue") 

shapiro.test(worksheet_activity2$Difference)
```

Is the assumption violated?

##### Interpret the descriptive statistics and the model output

```{r echo = FALSE} 
model2 <- wilcox.test(worksheet_activity2$Before, worksheet_activity2$After, paired = TRUE)
model2

worksheet_activity2 %>%
  summarise(median_before = median(Before), median_after = median(After),
            min_before = min(Before), min_after = min(After),
            max_before = max(Before), max_after = max(After),
            n())
```

What can we conclude? Report in APA format.

How was the p-value calculated? 

## Worksheet answers:

### Activity 1: Answers

#### Wilcoxon rank-sum test

Steps:

**1.	First rank the data**

```{r echo = FALSE} 
Group <- c("4 cups", "4 cups", "4 cups", "0 cups", "0 cups", "0 cups", "0 cups")
Tasks_completed <- c(5, 18, 14, 6, 4, 17, 14)
Rank <- c(2, 7, 4.5, 3, 1, 6, 4.5)
tab3 <- data.frame(Group, Tasks_completed, Rank)
kable(tab3, booktabs = TRUE, align=rep('c', 3)) %>%
  kable_styling(position = "center")
```

**2.	Sum the ranks per group**

<span style="color:purple">4 cups = 13.5</span>

<span style="color:purple">0 cups = 14.5</span>

**3.	Calculate the mean rank per group**

<span style="color:purple">4 cups = 3\*4 = 12. 12/2 = 6</span>

<span style="color:purple">0 cups = 4\*5 = 20. 20/2 = 10</span> 

**4.	Calculate the sum of ranks minus mean rank per group**

<span style="color:purple">4 cups = 13.5-6 = 7.5</span>

<span style="color:purple">0 cups = 14.5-10 = 4.5</span>

**5.	What is the test statistic?**

<span style="color:purple">Test statistic = The lowest sum of ranks. Test statistic = 4.5</span>

**6.	What might R report as the test statistic and why?**

<span style="color:purple">R reports the test statistic (*W*) as the sum of ranks minus the mean rank for the first factor level. R may therefore report the test statistic as 4.5 or 7.5.</span>

#### Wilcoxon signed-rank test

**1.	Calculate the difference between “Before intervention” and “After intervention”**

```{r echo = FALSE} 
Before_intervention <- c(23, 34, 67, 65, 21)
After_intervention <- c(27, 34, 91, 67, 44)
Difference <- c(-4, "Exclude", -24, -2, -23)
tab4<- data.frame(Before_intervention, After_intervention, Difference)
kable(tab4, booktabs = TRUE, align=rep('c', 3)) %>%
  kable_styling(position = "center") %>%
  column_spec(3, color = "purple")
```

**2.	Note whether the difference is positive or negative**

```{r echo = FALSE} 
Before_intervention <- c(23, 34, 67, 65, 21)
After_intervention <- c(27, 34, 91, 67, 44)
Difference <- c(-4, "Exclude", -24, -2, -23)
Sign <- c("Negative", "", "Negative", "Negative", "Negative")
tab5<- data.frame(Before_intervention, After_intervention, Difference, Sign)
kable(tab5, booktabs = TRUE, align=rep('c', 4)) %>%
  kable_styling(position = "center") %>%
    column_spec(3, color = "purple") %>%
    column_spec(4, color = "purple")

```

**3.	Rank the difference**

```{r echo = FALSE} 
Before_intervention <- c(23, 34, 67, 65, 21)
After_intervention <- c(27, 34, 91, 67, 44)
Difference <- c(-4, "Exclude", -24, -2, -23)
Sign <- c("Negative", "", "Negative", "Negative", "Negative")
Rank <- c("2", "", "4", "1", "3")
tab6<- data.frame(Before_intervention, After_intervention, Difference, Sign, Rank)
kable(tab6, booktabs = TRUE, align=rep('c', 5)) %>%
  kable_styling(position = "center") %>%
      column_spec(3, color = "purple") %>%
      column_spec(4, color = "purple") %>%
      column_spec(5, color = "purple")
```

**4.	Next, add up positive ranks and negative ranks**

<span style="color:purple">Positive ranks: 0</span>

<span style="color:purple">Negative ranks: 10</span>

**5.	What is the test statistic (*T*)?**

<span style="color:purple">*T* = 0</span>

**6.	R reports a test statistic “*V*” instead of R.  What might *V* equal to? Why might *V* equal to two values?**

<span style="color:purple">*V* = 0 or 10. *V* is equal to the sum of positive ranks. But whether ranks are positive or negative depends on whether you enter “before” or “after” first into the wilcox.test function (as this determines whether you calculate the difference by doing before-after or after-before).</span>

### Activity 2: Answers

### An independent groups design:

#### Testing the assumption of normality 

##### Group 1:
```{r echo = FALSE} 
qqnorm(group1$Outcome) 
qqline(group1$Outcome, col = "steelblue") 

shapiro.test(group1$Outcome)
```

##### Group 2:
```{r echo = FALSE} 
qqnorm(group2$Outcome) 
qqline(group2$Outcome, col = "steelblue") 

shapiro.test(group2$Outcome)
```

**Is the assumption violated?**

<span style="color:purple">Group 1: The assumption of normality is violated. Quite a few points deviate from the line in the Q-Q plot and the Shapiro-Wilk test is significant.</span>

<span style="color:purple">Group 2: The assumption of normality is not violated. The dots generally follow the line well in the Q-Q plot and the Shapiro-Wilk test is non-significant.</span>

#### Interpret the descriptive statistics and the model output

```{r echo = FALSE} 
model1 <- wilcox.test(Outcome ~ Group, data = worksheet_activity1, paired = FALSE)
model1

worksheet_activity1 %>%
  group_by(Group) %>%
  summarise(med = median(Outcome),
            min = min(Outcome),
            max = max(Outcome),
            n())
```

**What can we conclude? Report in APA format.**

<span style="color:purple">The Wilcoxon rank-sum test revealed no significant difference between Group 1 (Median = 17, Range = 1-35) and Group 2 (Median = 5.5, Range = 2-9; *W* = 19, *p* = 0.936).</span>

<span style="color:purple">Note: In practice, you should also calculate the effect size and report that.</span>

**How was the p-value calculated?**

<span style="color:purple">The normal approximation with the continuity correction</span>

### A repeated measures design

#### Testing the assumption of normality 

```{r echo = FALSE} 
qqnorm(worksheet_activity2$Difference) 
qqline(worksheet_activity2$Difference, col = "steelblue") 

shapiro.test(worksheet_activity2$Difference)
```

**Is the assumption violated?**

<span style="color:purple">The assumption of normality is violated. Some points deviate quite a bit from the line in the Q-Q plot and the Shapiro-Wilk test is significant.</span>

#### Interpret the descriptive statistics and the model output

```{r echo = FALSE} 
model2

worksheet_activity2 %>%
  summarise(median_before = median(Before), median_after = median(After),
            min_before = min(Before), min_after = min(After),
            max_before = max(Before), max_after = max(After),
            n())
```

**What can we conclude? Report in APA format.**

<span style="color:purple">The Wilcoxon signed-rank test revealed that participants ate significantly more grams of chocolate before the diet (Median = 232, Range = 230-235) than after the diet (Median = 18; Range = 4-33), *V* = 36, *p* = 0.014.</span>

<span style="color:purple">Note: In practice, you should also calculate the effect size and report that.</span>

**How was the p-value calculated?**

<span style="color:purple">The normal approximation with the continuity correction</span>
